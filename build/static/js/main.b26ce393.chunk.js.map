{"version":3,"sources":["Styles.js","App.js","helpers.js","reportWebVitals.js","index.js"],"names":["btn","light","dark","css","btnDefault","btnPrimary","styled","div","selectedDistricts","useStyles","makeStyles","theme","root","flexGrow","marginTop","paper","padding","spacing","textAlign","color","palette","text","secondary","display","flexDirection","alignItems","justifyContent","availability","fontSize","backgroundColor","borderRadius","paid","App","useState","states","setStates","districts","setDistricts","requestOTP","setRequestOTP","districtRef","useRef","stateRef","otp","setOTP","undefined","freeSlots","setFreeSlots","otpDone","setOTPDone","phoneNumber","setPhoneNumber","slotSearchSuccess","setSlotSearchSuccess","cowinUrl","baseUrl","addToast","useToasts","useEffect","axios","get","then","response","_get","ReactSelectStateAdapter","input","options","rest","placeholder","getOptionLabel","option","state_name","getOptionValue","state_id","searchable","ReactSelectDistrictAdapter","setSelectedDistricts","console","log","map","district","district_id","onChange","isMulti","district_name","TextFieldAdapter","meta","event","value","errorText","touched","error","required","submitOTP","data","post","appearance","toastMessage","setOTPValue","e","target","executeScrollDistrict","current","scrollIntoView","executeScrollState","searchSlots","district_ids","dates","searchResults","i","date","Date","now","toJSON","slice","split","reverse","join","push","length","j","url","Promise","all","forEach","centers","cIdx","center","sessions","sIdx","session","centerName","districtName","availableCapacity","vaccine","feeType","searchSlotsHelper","classes","knowMore","autoDismiss","placement","muiTheme","getMuiTheme","Styles","className","onSubmit","values","copiedValues","JSON","parse","stringify","state","phone_number","message_consent","render","handleSubmit","form","submitting","pristine","style","ref","onFocus","name","component","validate","previous","stateId","type","onClick","Grid","container","freeSlot","item","xs","Paper","hintText","floatingLabelText","disabled","reset","variant","href","rel","textDecoration","ToastApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"yNAEMA,EAAM,SAACC,EAAOC,GAAR,OAAiBC,YAAhB,IAAD,wgBAU0BF,EAAUC,EAC1BA,EAEkBD,EAAUC,EAERD,EAAUC,IAY9CE,EAAaD,YAAH,yCAASH,EAAI,UAAW,YAElCK,EAAaL,EAAI,UAAW,WAEnBM,MAAOC,IAAtB,61CAiDUF,EAGAD,G,2HCpENI,E,kCAEEC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,UAAW,QAEbC,MAAO,CACLC,QAASL,EAAMM,QAAQ,GACvBC,UAAW,SACXC,MAAOR,EAAMS,QAAQC,KAAKC,UAC1BC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,UAElBC,aAAc,CACZR,MAAO,UACPS,SAAU,OACVC,gBAAiB,WACjBb,QAAS,SACTO,QAAS,OACTO,aAAc,OACdJ,eAAgB,UAElBK,KAAM,CACJZ,MAAO,OACPS,SAAU,MACVC,gBAAiB,UACjBC,aAAc,OACdd,QAAS,eAIPgB,EAAM,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACTC,EADS,KACDC,EADC,OAEkBF,mBAAS,IAF3B,mBAETG,EAFS,KAEEC,EAFF,OAGoBJ,oBAAS,GAH7B,mBAGTK,EAHS,KAGGC,EAHH,KAIVC,EAAcC,iBAAO,MACrBC,EAAWD,iBAAO,MALR,EAMMR,mBAAS,GANf,mBAMTU,EANS,KAMJC,EANI,OAOkBX,wBAASY,GAP3B,mBAOTC,EAPS,KAOEC,EAPF,OAQcd,oBAAS,GARvB,mBAQTe,EARS,KAQAC,EARA,OASsBhB,mBAAS,IAT/B,mBASTiB,EATS,KASIC,EATJ,OAUkClB,oBAAS,GAV3C,mBAUTmB,EAVS,KAUUC,EAVV,KAWVC,EAAW,mDACXC,GAAU,wDACTC,GAAYC,sBAAZD,SAiEPE,qBAAU,WAnBRC,IAAMC,IAAN,UAAaN,EAAb,WACKO,MAAK,SAACC,GACL,GAAIA,EAAU,CACZ,IAAM5B,EAAS6B,IAAKD,EAAU,cAAe,IAC7C3B,EAAUD,SAiBjB,IAEH,IAAM8B,GAA0B,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,QAAYC,EAAU,mCAC7D,OACI,cAAC,IAAD,qCAAQC,YAAY,mBACRH,GADZ,IAEQC,QAASA,EACTG,eAAgB,SAACC,GAAD,OAAYA,EAAOC,YACnCC,eAAgB,SAACF,GAAD,OAAYA,EAAOG,WAC/BN,GALZ,IAMQO,YAAU,MAKlBC,GAA6B,SAAC,GAA+B,IAA9BV,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,QAAYC,EAAU,mCAGhE,SAASS,EAAqBV,GAC5BW,QAAQC,IAAIZ,GACZ1D,EAAoB0D,EAAQa,KAAI,SAAAC,GAC9B,OAAOA,EAASC,eAElBhB,EAAMiB,SAAShB,GAGjB,OAVAW,QAAQC,IAAIZ,EAASC,EAAMF,GAWvB,cAAC,IAAD,qCACIG,YAAY,qBACZe,SAAO,GACHlB,GAHR,IAIIC,QAAS9B,EACTiC,eAAgB,SAACC,GAAD,OAAYA,EAAOc,eACnCZ,eAAgB,SAACF,GAAD,OAAYA,EAAOW,aACnCC,SAAU,SAACjB,EAAOC,GAAR,OAAoBU,EAAqBX,KAC/CE,GARR,IASIO,YAAU,MAKdW,GAAmB,SAAC,GAAD,IAAEpB,EAAF,EAAEA,MAAOqB,EAAT,EAASA,KAASnB,EAAlB,uCACrB,cAAC,IAAD,uCACQF,GACAE,GAFR,IAGIe,SAAU,SAACK,EAAOC,GAAR,OAAkBvB,EAAMiB,SAASM,IAC3CC,UAAWH,EAAKI,QAAUJ,EAAKK,MAAQ,OAIzCC,GAAW,SAAAJ,GAAK,OAAKA,OAAQ3C,EAAY,YAE/C,SAASgD,KACP,IAAMC,EAAO,CAAC,aAAgB5C,EAAa,IAAOP,GAClDgB,IAAMoC,KAAN,UAAcxC,GAAd,2BAAgDuC,GAAMjC,MAAK,SAACC,GAC1Db,GAAW,GACXO,GAAS,kEAAmE,CAC1EwC,WAAY,eAGb,SAACL,GACF,IAAMM,EAAelC,IAAK4B,EAAO,wBAAyB,4BAC1DnC,GAASyC,EAAc,CACrBD,WAAY,aAKlB,SAASE,GAAYC,GACnBvD,EAAOuD,EAAEC,OAAOZ,OAGlB,IAAMa,GAAwB,kBAAM7D,EAAY8D,QAAQC,kBAClDC,GAAqB,kBAAM9D,EAAS4D,QAAQC,kBAGlD,SAASE,KACP,IAAM3D,EC9MK,SAA2B4D,GAMtC,IALA,IAAMC,EAAQ,GAGRC,EAAgB,GAEbC,EAAI,EAAGA,EAJK,EAIaA,IAAK,CACnC,IAAIC,EAAO,IAAIC,KAAKA,KAAKC,MAAQ,OAA0BH,GAAGI,SAASC,MAAM,EAAG,IAAIC,MAAM,KAAKC,UAAUC,KAAK,KAC9GV,EAAMW,KAAKR,GAGf,IAAK,IAAID,EAAI,EAAGA,EAAIH,EAAaa,OAAQV,IAErC,IAAK,IAAIW,EAAI,EAAGA,EAAIb,EAAMY,OAAQC,IAAK,CACnC3C,QAAQC,IAAI6B,EAAMa,IAClB,IACIC,EAAG,sGAAkGf,EAAaG,GAA/G,iBAA0HF,EAAMa,IADtH,GAERF,KAAK3D,IAAMC,IAAI6D,IA4BhC,OAxBAC,QAAQC,IAlBS,IAmBZ9D,MAAK,SAACC,GACHA,EAAS8D,SAAQ,SAAC9B,GAEd,IADA,IAAI+B,EAAU/B,EAAI,QACTgC,EAAO,EAAGA,EAAOD,EAAQN,OAAQO,IAGtC,IAFA,IAAIC,EAASF,EAAQC,GACjBE,EAAWD,EAAM,SACZE,EAAO,EAAGA,EAAOD,EAAST,OAAQU,IAAQ,CAC/C,IAAIC,EAAUF,EAASC,GACU,KAA7BC,EAAO,eAA4BA,EAAO,mBAAyB,GACnEtB,EAAcU,KAAK,CACfa,WAAYJ,EAAM,KAClBK,aAAcL,EAAM,cACpBjB,KAAMoB,EAAO,KACbG,kBAAmBH,EAAO,mBAC1BI,QAASJ,EAAO,QAChBK,QAASR,EAAM,kBAMpC,kBAAMlD,QAAQC,IAAI,gCAElB8B,EDiKW4B,CAAkBhI,GACpCqE,QAAQC,IAAIhC,GACZO,GAAqB,GACjBP,EAAUyE,OAAS,GACrBxE,EAAaD,GAIjB,IAAM2F,GAAUhI,IAEhB,SAASiI,KACPlF,GAAS,6MAA8M,CACrNwC,WAAY,OACZ2C,aAAa,EACbC,UAAW,iBAIf,OACI,cAAC,IAAD,CAAkBC,SAAUC,MAA5B,SACE,eAACC,EAAD,WACE,oBAAIC,UAAW,cAAf,yFACA,oBAAIA,UAAW,cAAf,2BACEhG,GACF,oBAAIgG,UAAW,cAAf,8EACEhG,EA0JE,iGAzJA,cAAC,IAAD,CACIiG,SAzKC,SAAAC,GACf,IAAI5G,GAAec,EAAnB,CAEA,IAAI+F,EAAeC,KAAKC,MAAMD,KAAKE,UAAUJ,IACvCzE,EAAWyE,EAAOK,MAAM9E,SACxBiC,EAAewC,EAAOlE,SAASD,KAAI,SAAAC,GACvC,OAAOA,EAASC,eAElBkE,EAAa1E,SAAWA,EACxB0E,EAAazC,aAAeA,SACrByC,EAAY,aACZA,EAAY,SAEnBhG,EAAegG,EAAaK,cAEa,KAArCL,EAAaK,aAAajC,OAOzB4B,EAAaM,gBAOlB9F,IAAMoC,KAAN,UAAcxC,GAAd,gBAAqC4F,GAActF,MAAK,SAACC,GACvDvB,GAAc,GACdiB,GAAS,iDAAkD,CACzDwC,WAAY,eAEb,SAACL,GACFd,QAAQC,IAAIa,GACZ,IAAMM,EAAelC,IAAK4B,EAAO,wBAAyB,wBAC1DnC,GAASyC,EAAc,CACrBD,WAAY,aAfdxC,GAAS,gEAAiE,CACxEwC,WAAY,UARdxC,GAAS,4DAA6D,CACpEwC,WAAY,YAyJF0D,OAAQ,gBAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,WAAYC,EAAlC,EAAkCA,SAAlC,EAA4CZ,OAA5C,OACJ,uBAAMD,SAAUU,EAAhB,UACE,qBAAKI,MAAO,CAACjJ,UAAW,QAASkJ,IAAKtH,EAAUuH,QAASzD,GAAzD,SACE,cAAC,IAAD,CACI0D,KAAK,QACLC,UAAWnG,GACXoG,SAAUxE,GACV1B,QAAShC,MAGf,cAAC,IAAD,CAAUgI,KAAK,QAAf,SACG,SAAC1E,EAAO6E,GAhIjC,IAAyBC,IAiIiB9E,EAAMf,SAhI9Cd,IAAMC,IAAN,UAAaN,EAAb,qBAAkCgH,IAC7BzG,MAAK,SAACC,GACL,GAAIA,EAAU,CACZ,IAAM1B,EAAY2B,IAAKD,EAAU,iBAAkB,IACnDzB,EAAaD,UA+HD,qBAAK2H,MAAO,CAACjJ,UAAW,QAASkJ,IAAKxH,EAAayH,QAAS5D,GAA5D,SACE,cAAC,IAAD,CACI6D,KAAK,WACLC,UAAWxF,GACXyF,SAAUxE,GACV1B,QAAS9B,MAIf,qBAAK2H,MAAO,CAACjJ,UAAW,OAAQS,QAAS,OAAQG,eAAgB,UAAjE,SACE,wBAAQ6I,KAAK,SAASC,QAAS/D,GAA/B,sBAID3D,GACD,qBAAKkG,UAAWP,GAAQ7H,KAAxB,SACE,cAAC6J,EAAA,EAAD,CAAMC,WAAS,EAACzJ,QAAS,EAAzB,SACG6B,EAAUiC,KAAI,SAAA4F,GACb,OAAO,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAAb,SACL,eAACC,EAAA,EAAD,CAAO9B,UAAWP,GAAQ1H,MAA1B,UACE,8BACE,gCAAQ4J,EAASxC,eAEnB,qBAAK4B,MAAO,CAACnI,SAAU,QAAvB,SACE,gCAAQ+I,EAASvC,iBAEnB,8BACE,gCAAQuC,EAAS7D,SAEnB,qBAAKkC,UAAWP,GAAQ9G,aAAxB,SACE,gCAAQgJ,EAAStC,sBAEnB,qBAAK0B,MAAS,CAACnI,SAAU,QAAzB,SACE,gCAAQ+I,EAASrC,YAEnB,qBAAKU,UAAWP,GAAQ1G,KAAxB,SACE,gCAAQ4I,EAASpC,wBAS7B,qBAAKS,UAAWP,GAAQ7H,KAAxB,SACE,cAAC6J,EAAA,EAAD,CAAMC,WAAS,EAACzJ,QAAS,MAM1BmC,GACD,gCAEE,8BACE,oHAGF,qBAAK4F,UAAU,YAAf,SACE,cAAC,IAAD,CACIkB,KAAK,aACLC,UAAW9E,GACX+E,SAAUxE,GACVmF,SAAS,OACTC,kBAAkB,WAIxB,qBAAKhC,UAAU,YAAf,SACE,cAAC,IAAD,CACIkB,KAAK,eACLC,UAAW9E,GACX+E,SAAUxE,GACVmF,SAAS,eACTC,kBAAkB,qCAIxB,sBAAKjB,MAAO,CAACjJ,UAAW,QAAxB,UACE,cAAC,IAAD,CAAOoJ,KAAK,kBAAkBC,UAAU,QAAQI,KAAK,aACrD,kEAKAjI,GACF,sBAAKyH,MAAO,CAACjJ,UAAW,QAAxB,UAEE,sBAAKkI,UAAU,UAAf,UACE,wBAAQuB,KAAK,SAASU,SAAUpB,EAAhC,oBAGA,wBACIU,KAAK,SACLC,QAASZ,EAAKsB,MACdD,SAAUpB,GAAcC,EAH5B,sBAQF,qBAAKC,MAAO,CAACjJ,UAAW,OAAQc,SAAU,QAASoH,UAAW,eAA9D,SACE,wHASL1G,GACD,gCACE,cAAC,IAAD,CACI6I,QAAQ,WACRjB,KAAK,MACLa,SAAS,MACTC,kBAAkB,MAClB9F,SAAUgB,KAEd,wBAAQqE,KAAK,SAASC,QAAS3E,GAA/B,wBAGA,sBAAKkE,MAAO,CAACjJ,UAAW,OAAQc,SAAU,QAASoH,UAAW,eAA9D,UACE,yFACE,mBAAGoC,KAAK,mEAAmEhF,OAAO,SAASiF,IAAI,sBAA/F,kBADF,kDAIE,qBAAKtB,MAAQ,CAAC5I,MAAO,OAAQmK,eAAgB,aAAcd,QAAS9B,GAApE,yCAsBf6C,EAPE,kBACb,cAAC,gBAAD,CAAe5C,aAAa,EAA5B,SACE,cAAC,EAAD,OEhYS6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7H,MAAK,YAAkD,IAA/C8H,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAStC,OACP,cAAC,IAAMuC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.b26ce393.chunk.js","sourcesContent":["import styled, {css} from 'styled-components'\n\nconst btn = (light, dark) => css`\n  white-space: nowrap;\n  display: inline-block;\n  border-radius: 5px;\n  padding: 5px 15px;\n  font-size: 16px;\n  color: white;\n  &:visited {\n    color: white;\n  }\n  background-image: linear-gradient(${light}, ${dark});\n  border: 1px solid ${dark};\n  &:hover {\n    background-image: linear-gradient(${light}, ${dark});\n    &[disabled] {\n      background-image: linear-gradient(${light}, ${dark});\n    }\n  }\n  &:visited {\n    color: black;\n  }\n  &[disabled] {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`\n\nconst btnDefault = css`${btn('#ffffff', '#d5d5d5')} color: #555;`\n\nconst btnPrimary = btn('#4f93ce', '#285f8f')\n\nexport default styled.div`\n  font-family: sans-serif;\n\n  h1 {\n    text-align: center;\n    color: #222;\n    margin-left: 8px;\n    margin-right:8px;\n  }\n\n  h2 {\n    text-align: center;\n    color: #222;\n        margin-left: 8px;\n    margin-right:8px;\n  }\n\n  & > div {\n    margin: 5px;\n    text-align: center;\n  }\n\n  & > a {\n    display: block;\n    text-align: center;\n    color: #222;\n    margin-bottom: 10px;\n  }\n\n  form {\n    width: 500px;\n    max-width: 80vw;\n    margin: 10px auto;\n    border: 1px solid #ccc;\n    padding: 20px;\n    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);\n    border-radius: 3px;\n    position: relative;\n    \n\n    .buttons {  \n      display: flex;\n      flex-flow: row nowrap;\n      justify-content: center;\n      margin-top: 15px;\n    }\n    button {\n      margin: 0 10px;\n      &[type='submit'] {\n        ${btnPrimary};\n      }\n      &[type='button'] {\n        ${btnDefault};\n      }\n    }\n    .error {\n      display: flex;\n      font-weight: bold;\n      color: #800;\n      flex-flow: row nowrap;\n      justify-content: center;\n    }\n    .Select {\n      width: 100%;\n    }\n    pre {\n      border: 1px solid #ccc;\n      background: rgba(0, 0, 0, 0.1);\n      box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.2);\n      padding: 20px;\n    }\n    \n    .textfield {\n      div {z-index: 0}\n    }\n    \n  }\n`\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, {useEffect, useRef, useState} from 'react'\nimport Styles from './Styles'\nimport {Field, Form,} from 'react-final-form'\nimport {OnChange} from 'react-final-form-listeners'\nimport axios from \"axios\";\nimport _get from 'lodash/get'\nimport Select from 'react-select'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport getMuiTheme from 'material-ui/styles/getMuiTheme'\nimport TextField from 'material-ui/TextField'\nimport {ToastProvider, useToasts} from 'react-toast-notifications';\nimport searchSlotsHelper from './helpers';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {makeStyles} from '@material-ui/core/styles';\n\nlet selectedDistricts;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '20px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  availability: {\n    color: '#2e2e2e',\n    fontSize: '12px',\n    backgroundColor: ' #a9d18e',\n    padding: '0 10px',\n    display: 'flex',\n    borderRadius: '50px',\n    justifyContent: 'center'\n  },\n  paid: {\n    color: '#fff',\n    fontSize: '9px',\n    backgroundColor: '#2152b3',\n    borderRadius: '20px',\n    padding: '2px 5px',\n  }\n}));\n\nconst App = () => {\n  const [states, setStates] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [requestOTP, setRequestOTP] = useState(false);\n  const districtRef = useRef(null)\n  const stateRef = useRef(null)\n  const [otp, setOTP] = useState(0);\n  const [freeSlots, setFreeSlots] = useState(undefined)\n  const [otpDone, setOTPDone] = useState(false);\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [slotSearchSuccess, setSlotSearchSuccess] = useState(false);\n  const cowinUrl = 'https://cdn-api.co-vin.in/api/v2/admin/location/';\n  const baseUrl = 'https://cowin-webserver-slotlocker2.cloud.okteto.net/'\n  const {addToast} = useToasts()\n\n  const onSubmit = values => {\n    if (requestOTP || !slotSearchSuccess)\n      return\n    let copiedValues = JSON.parse(JSON.stringify(values));\n    const state_id = values.state.state_id;\n    const district_ids = values.district.map(district => {\n      return district.district_id\n    })\n    copiedValues.state_id = state_id;\n    copiedValues.district_ids = district_ids;\n    delete copiedValues['state'];\n    delete copiedValues['district'];\n\n    setPhoneNumber(copiedValues.phone_number)\n\n    if (copiedValues.phone_number.length !== 10) {\n      addToast(\"Please enter a 10 digit phone number without country code\", {\n        appearance: 'error',\n      })\n      return;\n    }\n\n    if (!copiedValues.message_consent) {\n      addToast(\"Please allow updates on Whatsapp to register for notification\", {\n        appearance: 'error',\n      })\n      return;\n    }\n\n    axios.post(`${baseUrl}api/v1/user/`, copiedValues).then((response) => {\n      setRequestOTP(true);\n      addToast('Please Enter the OTP received on your WhatsApp', {\n        appearance: 'success',\n      })\n    }, (error) => {\n      console.log(error);\n      const toastMessage = _get(error, 'response.data.message', 'Something went wrong')\n      addToast(toastMessage, {\n        appearance: 'error',\n      })\n    });\n  }\n\n  function getAllStates() {\n    axios.get(`${cowinUrl}states`)\n        .then((response) => {\n          if (response) {\n            const states = _get(response, 'data.states', []);\n            setStates(states)\n          }\n        })\n  }\n\n  function getAllDistricts(stateId) {\n    axios.get(`${cowinUrl}districts/${stateId}`)\n        .then((response) => {\n          if (response) {\n            const districts = _get(response, 'data.districts', []);\n            setDistricts(districts)\n          }\n        })\n  }\n\n  useEffect(() => {\n    getAllStates()\n  }, [])\n\n  const ReactSelectStateAdapter = ({input, options, ...rest}) => {\n    return (\n        <Select placeholder='Select State...'\n                {...input}\n                options={options}\n                getOptionLabel={(option) => option.state_name}\n                getOptionValue={(option) => option.state_id}\n                {...rest}\n                searchable/>\n\n    )\n  }\n\n  const ReactSelectDistrictAdapter = ({input, options, ...rest}) => {\n    console.log(options, rest, input)\n\n    function setSelectedDistricts(options) {\n      console.log(options);\n      selectedDistricts = options.map(district => {\n        return district.district_id\n      })\n      input.onChange(options)\n    }\n\n    return (\n        <Select\n            placeholder='Select District...'\n            isMulti\n            {...input}\n            options={districts}\n            getOptionLabel={(option) => option.district_name}\n            getOptionValue={(option) => option.district_id}\n            onChange={(input, options) => setSelectedDistricts(input, options)}\n            {...rest}\n            searchable/>\n\n    )\n  }\n\n  const TextFieldAdapter = ({input, meta, ...rest}) => (\n      <TextField\n          {...input}\n          {...rest}\n          onChange={(event, value) => input.onChange(value)}\n          errorText={meta.touched ? meta.error : ''}\n      />\n  )\n\n  const required = value => (value ? undefined : 'Required')\n\n  function submitOTP() {\n    const data = {\"phone_number\": phoneNumber, \"otp\": otp};\n    axios.post(`${baseUrl}api/v1/user/otp/submit/`, data).then((response) => {\n      setOTPDone(true);\n      addToast('Successfully registered for a WhatsApp notification. Stay Safe!', {\n        appearance: 'success',\n      })\n\n    }, (error) => {\n      const toastMessage = _get(error, 'response.data.message', 'Please enter correct OTP')\n      addToast(toastMessage, {\n        appearance: 'error',\n      })\n    });\n  }\n\n  function setOTPValue(e) {\n    setOTP(e.target.value)\n  }\n\n  const executeScrollDistrict = () => districtRef.current.scrollIntoView()\n  const executeScrollState = () => stateRef.current.scrollIntoView()\n\n\n  function searchSlots() {\n    const freeSlots = searchSlotsHelper(selectedDistricts)\n    console.log(freeSlots)\n    setSlotSearchSuccess(true);\n    if (freeSlots.length > 0) {\n      setFreeSlots(freeSlots)\n    }\n  }\n\n  const classes = useStyles();\n\n  function knowMore() {\n    addToast(\"We are asking you to do this because of existing Whatsapp policy where a number cannot reach out to more than 1000 new users per day. When you message us, Whatsapp does not count it against this quota. \", {\n      appearance: 'info',\n      autoDismiss: false,\n      placement: 'bottom-right'\n    })\n  }\n\n  return (\n      <MuiThemeProvider muiTheme={getMuiTheme()}>\n        <Styles>\n          <h1 className={'font-roboto'}>Get notified on WhatsApp when a vaccination slot is available in your city!</h1>\n          <h1 className={'font-roboto'}>For 18+ only</h1>\n          {!otpDone &&\n          <h2 className={'font-roboto'}>Register below & relax, while we scan Co-win for available slots</h2>}\n          {!otpDone ?\n              <Form\n                  onSubmit={onSubmit}\n                  render={({handleSubmit, form, submitting, pristine, values}) => (\n                      <form onSubmit={handleSubmit}>\n                        <div style={{marginTop: '20px'}} ref={stateRef} onFocus={executeScrollState}>\n                          <Field\n                              name=\"state\"\n                              component={ReactSelectStateAdapter}\n                              validate={required}\n                              options={states}\n                          />\n                        </div>\n                        <OnChange name=\"state\">\n                          {(value, previous) => {\n                            getAllDistricts(value.state_id)\n                          }}\n                        </OnChange>\n                        <div style={{marginTop: '20px'}} ref={districtRef} onFocus={executeScrollDistrict}>\n                          <Field\n                              name=\"district\"\n                              component={ReactSelectDistrictAdapter}\n                              validate={required}\n                              options={districts}\n\n                          />\n                        </div>\n                        <div style={{marginTop: '20px', display: 'flex', justifyContent: 'center'}}>\n                          <button type='submit' onClick={searchSlots}>\n                            Search\n                          </button>\n                        </div>\n                        {freeSlots &&\n                        <div className={classes.root}>\n                          <Grid container spacing={1}>\n                            {freeSlots.map(freeSlot => {\n                              return <Grid item xs>\n                                <Paper className={classes.paper}>\n                                  <div>\n                                    <label>{freeSlot.centerName}</label>\n                                  </div>\n                                  <div style={{fontSize: '12px'}}>\n                                    <label>{freeSlot.districtName}</label>\n                                  </div>\n                                  <div>\n                                    <label>{freeSlot.date}</label>\n                                  </div>\n                                  <div className={classes.availability}>\n                                    <label>{freeSlot.availableCapacity}</label>\n                                  </div>\n                                  <div style = {{fontSize: '12px'}}>\n                                    <label>{freeSlot.vaccine}</label>\n                                  </div>\n                                  <div className={classes.paid}>\n                                    <label>{freeSlot.feeType}</label>\n                                  </div>\n                                </Paper>\n                              </Grid>\n                            })\n                            }\n                          </Grid>\n                        </div>\n                        }\n                        <div className={classes.root}>\n                          <Grid container spacing={1}>\n                            {\n\n                            }\n                          </Grid>\n                        </div>\n                        {slotSearchSuccess &&\n                        <div>\n\n                          <div>\n                            <label>No Free slots available. Please register to get notified when a slot opens up</label>\n                          </div>\n\n                          <div className='textfield'>\n                            <Field\n                                name=\"first_name\"\n                                component={TextFieldAdapter}\n                                validate={required}\n                                hintText=\"Name\"\n                                floatingLabelText=\"Name\"\n                            />\n                          </div>\n\n                          <div className='textfield'>\n                            <Field\n                                name=\"phone_number\"\n                                component={TextFieldAdapter}\n                                validate={required}\n                                hintText=\"Phone Number\"\n                                floatingLabelText=\"Phone Number (no country code)\"\n                            />\n                          </div>\n\n                          <div style={{marginTop: '20px'}}>\n                            <Field name=\"message_consent\" component=\"input\" type=\"checkbox\"/>\n                            <label>\n                              Allow updates on WhatsApp\n                            </label>\n                          </div>\n\n                          {!requestOTP &&\n                          <div style={{marginTop: '20px'}}>\n\n                            <div className=\"buttons\">\n                              <button type=\"submit\" disabled={submitting}>\n                                Submit\n                              </button>\n                              <button\n                                  type=\"button\"\n                                  onClick={form.reset}\n                                  disabled={submitting || pristine}\n                              >\n                                Reset\n                              </button>\n                            </div>\n                            <div style={{marginTop: '10px', fontSize: '12px'}} className={'center-align'}>\n                              <label>\n                                Don't worry! Your data is safe with us. You can delete it anytime you want.\n                              </label>\n                            </div>\n\n                          </div>}\n                        </div>\n                        }\n\n                        {requestOTP &&\n                        <div>\n                          <TextField\n                              variant=\"standard\"\n                              name=\"otp\"\n                              hintText='OTP'\n                              floatingLabelText='OTP'\n                              onChange={setOTPValue}\n                          />\n                          <button type='submit' onClick={submitOTP}>\n                            Submit OTP\n                          </button>\n                          <div style={{marginTop: '10px', fontSize: '14px'}} className={'center-align'}>\n                            <label>In case you don't receive the OTP, please click &nbsp;\n                              <a href=\"http://api.whatsapp.com/send?phone=918047107750&text=Notify%20Me\" target=\"_blank\" rel=\"noopener noreferrer\">here</a> &nbsp;\n                               and hit send and you'll be registered.\n                            </label>\n                              <div style={ {color: 'blue', textDecoration: 'underline'}} onClick={knowMore}>Know More</div>\n                          </div>\n                        </div>}\n\n                      </form>\n                  )}\n              />\n              :\n              <h2>Successfully registered for a WhatsApp notification. Stay Safe!</h2>\n          }\n        </Styles>\n      </MuiThemeProvider>\n  )\n}\n\nconst ToastApp = () => (\n    <ToastProvider autoDismiss={true}>\n      <App/>\n    </ToastProvider>\n)\n\n\nexport default ToastApp;\n","import axios from \"axios\";\n\nexport default function searchSlotsHelper(district_ids) {\n    const dates = []\n    const NUM_OF_WEEKS = 5\n    const promises = []\n    const searchResults = []\n\n    for (let i = 0; i < NUM_OF_WEEKS; i++) {\n        let date = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000 * i).toJSON().slice(0, 10).split('-').reverse().join('/')\n        dates.push(date)\n    }\n\n    for (let i = 0; i < district_ids.length; i++) {\n\n        for (let j = 0; j < dates.length; j++) {\n            console.log(dates[j])\n            const promises = []\n            let url = `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=${district_ids[i]}&date=${dates[j]}`\n            promises.push(axios.get(url))\n        }\n    }\n\n    Promise.all(promises)\n        .then((response) => {\n            response.forEach((data) => {\n                let centers = data['centers']\n                for (let cIdx = 0; cIdx < centers.length; cIdx++) {\n                    let center = centers[cIdx]\n                    let sessions = center['sessions']\n                    for (let sIdx = 0; sIdx < sessions.length; sIdx++) {\n                        let session = sessions[sIdx]\n                        if (session['min_age_limit'] === 18 && session['available_capacity'] > 1) {\n                            searchResults.push({\n                                centerName: center['name'],\n                                districtName: center['district_name'],\n                                date: session['date'],\n                                availableCapacity: session['available_capacity'],\n                                vaccine: session['vaccine'],\n                                feeType: center['fee_type']\n                            })\n                        }\n                    }\n                }\n            })\n        }, () => console.log('Failed to fetch the slots'))\n\n    return searchResults\n};\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}