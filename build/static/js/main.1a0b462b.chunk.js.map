{"version":3,"sources":["Styles.js","helpers.js","App.js","reportWebVitals.js","index.js"],"names":["btn","light","dark","css","btnDefault","btnPrimary","styled","div","searchSlotsHelper","district_ids","dates","promises","i","date","Date","now","toJSON","slice","split","reverse","join","push","length","j","url","axios","get","Promise","all","getFreeSlots","data","searchResults","centers","cIdx","center","sessions","sIdx","session","centerName","districtName","availableCapacity","vaccine","feeType","selectedDistricts","useStyles","makeStyles","theme","root","flexGrow","marginTop","paper","padding","spacing","textAlign","color","palette","text","secondary","display","flexDirection","alignItems","justifyContent","availability","fontSize","backgroundColor","borderRadius","paid","App","useState","states","setStates","districts","setDistricts","districtRef","useRef","stateRef","undefined","freeSlots","setFreeSlots","fetchingSlots","setFetchingSlots","cowinUrl","useToasts","addToast","useEffect","then","response","_get","ReactSelectStateAdapter","input","options","rest","placeholder","getOptionLabel","option","state_name","getOptionValue","state_id","searchable","ReactSelectDistrictAdapter","setSelectedDistricts","map","district","district_id","onChange","isMulti","district_name","required","value","executeScrollDistrict","current","scrollIntoView","executeScrollState","searchSlots","a","promise","responses","forEach","resp","console","log","classes","muiTheme","getMuiTheme","Styles","className","onSubmit","values","copiedValues","JSON","parse","stringify","state","render","handleSubmit","form","submitting","pristine","style","ref","onFocus","name","component","validate","previous","stateId","type","onClick","Grid","container","freeSlot","item","xs","Paper","ToastApp","autoDismiss","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a0b462b.chunk.js","sourcesContent":["import styled, {css} from 'styled-components'\n\nconst btn = (light, dark) => css`\n  white-space: nowrap;\n  display: inline-block;\n  border-radius: 5px;\n  padding: 5px 15px;\n  font-size: 16px;\n  color: white;\n  &:visited {\n    color: white;\n  }\n  background-image: linear-gradient(${light}, ${dark});\n  border: 1px solid ${dark};\n  &:hover {\n    background-image: linear-gradient(${light}, ${dark});\n    &[disabled] {\n      background-image: linear-gradient(${light}, ${dark});\n    }\n  }\n  &:visited {\n    color: black;\n  }\n  &[disabled] {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`\n\nconst btnDefault = css`${btn('#ffffff', '#d5d5d5')} color: #555;`\n\nconst btnPrimary = btn('#4f93ce', '#285f8f')\n\nexport default styled.div`\n  font-family: sans-serif;\n\n  h1 {\n    text-align: center;\n    color: #222;\n    margin-left: 8px;\n    margin-right:8px;\n  }\n\n  h2 {\n    text-align: center;\n    color: #222;\n        margin-left: 8px;\n    margin-right:8px;\n  }\n\n  & > div {\n    margin: 5px;\n    text-align: center;\n  }\n\n  & > a {\n    display: block;\n    text-align: center;\n    color: #222;\n    margin-bottom: 10px;\n  }\n\n  form {\n    width: 500px;\n    max-width: 80vw;\n    margin: 10px auto;\n    border: 1px solid #ccc;\n    padding: 20px;\n    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);\n    border-radius: 3px;\n    position: relative;\n    \n\n    .buttons {  \n      display: flex;\n      flex-flow: row nowrap;\n      justify-content: center;\n      margin-top: 15px;\n    }\n    button {\n      margin: 0 10px;\n      &[type='submit'] {\n        ${btnPrimary};\n      }\n      &[type='button'] {\n        ${btnDefault};\n      }\n    }\n    .error {\n      display: flex;\n      font-weight: bold;\n      color: #800;\n      flex-flow: row nowrap;\n      justify-content: center;\n    }\n    .Select {\n      width: 100%;\n    }\n    pre {\n      border: 1px solid #ccc;\n      background: rgba(0, 0, 0, 0.1);\n      box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.2);\n      padding: 20px;\n    }\n    \n    .textfield {\n      div {z-index: 0}\n    }\n    \n  }\n`\n","import axios from \"axios\";\n\nexport function searchSlotsHelper(district_ids) {\n    const dates = []\n    const NUM_OF_WEEKS = 5\n    const promises = []\n\n    for (let i = 0; i < NUM_OF_WEEKS; i++) {\n        let date = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000 * i).toJSON().slice(0, 10).split('-').reverse().join('/')\n        dates.push(date)\n    }\n\n    for (let i = 0; i < district_ids.length; i++) {\n        for (let j = 0; j < dates.length; j++) {\n            let url = `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=${district_ids[i]}&date=${dates[j]}`\n            promises.push(axios.get(url))\n        }\n    }\n\n    // return Promise.all(promises)\n    //     .then(response => {\n    //         response.forEach((resp) => {\n    //             console.log(\"resp:\", resp);\n    //\n    //         })\n    //     }, () => console.log('Failed to fetch the slots'))\n\n    return Promise.all(promises)\n};\n\nexport function getFreeSlots(data, searchResults) {\n    let centers = data['centers']\n    for (let cIdx = 0; cIdx < centers.length; cIdx++) {\n        let center = centers[cIdx]\n        let sessions = center['sessions']\n        for (let sIdx = 0; sIdx < sessions.length; sIdx++) {\n            let session = sessions[sIdx]\n            if (session['available_capacity'] > 0 && session['min_age_limit'] === 18) {\n                searchResults.push({\n                    centerName: center['name'],\n                    districtName: center['district_name'],\n                    date: session['date'],\n                    availableCapacity: session['available_capacity'],\n                    vaccine: session['vaccine'],\n                    feeType: center['fee_type']\n                })\n            }\n        }\n    }\n}\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, {useEffect, useRef, useState} from 'react'\nimport Styles from './Styles'\nimport {Field, Form,} from 'react-final-form'\nimport {OnChange} from 'react-final-form-listeners'\nimport axios from \"axios\";\nimport _get from 'lodash/get'\nimport Select from 'react-select'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport getMuiTheme from 'material-ui/styles/getMuiTheme'\nimport TextField from 'material-ui/TextField'\nimport {ToastProvider, useToasts} from 'react-toast-notifications';\nimport { searchSlotsHelper, getFreeSlots } from './helpers';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {makeStyles} from '@material-ui/core/styles';\n\nlet selectedDistricts;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: '20px'\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    availability: {\n        color: '#2e2e2e',\n        fontSize: '12px',\n        backgroundColor: ' #a9d18e',\n        padding: '0 10px',\n        display: 'flex',\n        borderRadius: '50px',\n        justifyContent: 'center'\n    },\n    paid: {\n        color: '#fff',\n        fontSize: '9px',\n        backgroundColor: '#2152b3',\n        borderRadius: '20px',\n        padding: '2px 5px',\n    }\n}));\n\nconst App = () => {\n    const [states, setStates] = useState([]);\n    const [districts, setDistricts] = useState([]);\n    // To add this in the next iteration\n    // const [age, setAge] = useState();\n    // const [vaccine, setVaccine] = useState();\n    // const [feeType, setFeeType] = useState();\n    const districtRef = useRef(null)\n    const stateRef = useRef(null)\n    const [freeSlots, setFreeSlots] = useState(undefined)\n    const [fetchingSlots, setFetchingSlots] = useState(false);\n    const cowinUrl = 'https://cdn-api.co-vin.in/api/v2/admin/location/';\n    const {addToast} = useToasts()\n\n    const onSubmit = values => {\n        let copiedValues = JSON.parse(JSON.stringify(values));\n        const state_id = values.state.state_id;\n        const district_ids = values.district.map(district => {\n            return district.district_id\n        })\n        copiedValues.state_id = state_id;\n        copiedValues.district_ids = district_ids;\n        delete copiedValues['state'];\n        delete copiedValues['district'];\n    }\n\n    function getAllStates() {\n        axios.get(`${cowinUrl}states`)\n            .then((response) => {\n                if (response) {\n                    const states = _get(response, 'data.states', []);\n                    setStates(states)\n                }\n            })\n    }\n\n    function getAllDistricts(stateId) {\n        axios.get(`${cowinUrl}districts/${stateId}`)\n            .then((response) => {\n                if (response) {\n                    const districts = _get(response, 'data.districts', []);\n                    setDistricts(districts)\n                }\n            })\n    }\n\n    useEffect(() => {\n        getAllStates()\n    }, [])\n\n    const ReactSelectStateAdapter = ({input, options, ...rest}) => {\n        return (\n            <Select placeholder='Select State...'\n                    {...input}\n                    options={options}\n                    getOptionLabel={(option) => option.state_name}\n                    getOptionValue={(option) => option.state_id}\n                    {...rest}\n                    searchable/>\n\n        )\n    }\n\n    const ReactSelectDistrictAdapter = ({input, options, ...rest}) => {\n\n        function setSelectedDistricts(options) {\n            selectedDistricts = options.map(district => {\n                return district.district_id\n            })\n            input.onChange(options)\n        }\n\n        return (\n            <Select\n                placeholder='Select District...'\n                isMulti\n                {...input}\n                options={districts}\n                getOptionLabel={(option) => option.district_name}\n                getOptionValue={(option) => option.district_id}\n                onChange={(input, options) => setSelectedDistricts(input, options)}\n                {...rest}\n                searchable/>\n\n        )\n    }\n\n    const TextFieldAdapter = ({input, meta, ...rest}) => (\n        <TextField\n            {...input}\n            {...rest}\n            onChange={(event, value) => input.onChange(value)}\n            errorText={meta.touched ? meta.error : ''}\n        />\n    )\n\n    const required = value => (value ? undefined : 'Required')\n\n    const executeScrollDistrict = () => districtRef.current.scrollIntoView()\n    const executeScrollState = () => stateRef.current.scrollIntoView()\n\n\n    async function searchSlots() {\n        setFetchingSlots(true)\n        const promise = searchSlotsHelper(selectedDistricts)\n        const freeSlots = []\n\n        promise.then((responses) => {\n            responses.forEach((resp) => {\n                getFreeSlots(resp.data, freeSlots)\n            })\n            setFetchingSlots(false)\n            if (freeSlots.length > 0) {\n                setFreeSlots(freeSlots)\n            }\n        }, () => console.log('Failed to fetch the slots'))\n    }\n\n    const classes = useStyles();\n\n    return (\n        <MuiThemeProvider muiTheme={getMuiTheme()}>\n            <Styles>\n                <h1 className={'font-roboto'}>Search for a vaccination slot in your city!</h1>\n                <h3 className={'notice'}>Due to new government API limits, we will not be able to send proper notifications on time.</h3>\n                <div className={'notice'}>For people who have already registered, we have deleted your data.</div>\n\n                <Form\n                    onSubmit={onSubmit}\n                    render={({handleSubmit, form, submitting, pristine, values}) => (\n                        <form onSubmit={handleSubmit}>\n                            <div style={{marginTop: '20px'}} ref={stateRef} onFocus={executeScrollState}>\n                                <Field\n                                    name=\"state\"\n                                    component={ReactSelectStateAdapter}\n                                    validate={required}\n                                    options={states}\n                                />\n                            </div>\n                            <OnChange name=\"state\">\n                                {(value, previous) => {\n                                    getAllDistricts(value.state_id)\n                                }}\n                            </OnChange>\n                            <div style={{marginTop: '20px'}} ref={districtRef} onFocus={executeScrollDistrict}>\n                                <Field\n                                    name=\"district\"\n                                    component={ReactSelectDistrictAdapter}\n                                    validate={required}\n                                    options={districts}\n\n                                />\n                            </div>\n                            <div style={{marginTop: '20px', display: 'flex', justifyContent: 'center'}}>\n                                <button type='submit' onClick={searchSlots}>\n                                    Search\n                                </button>\n                            </div>\n                            {\n                                fetchingSlots &&\n                                    <div>\n                                        Fetching slots...\n                                    </div>\n                            }\n                            {freeSlots &&\n                            <div className={classes.root}>\n                                <Grid container spacing={1}>\n                                    {freeSlots.map(freeSlot => {\n                                        return <Grid item xs>\n                                            <Paper className={classes.paper}>\n                                                <div>\n                                                    <label>{freeSlot.centerName}</label>\n                                                </div>\n                                                <div style={{fontSize: '12px'}}>\n                                                    <label>{freeSlot.districtName}</label>\n                                                </div>\n                                                <div>\n                                                    <label>{freeSlot.date}</label>\n                                                </div>\n                                                <div className={classes.availability}>\n                                                    <label>{freeSlot.availableCapacity}</label>\n                                                </div>\n                                                <div style={{fontSize: '12px'}}>\n                                                    <label>{freeSlot.vaccine}</label>\n                                                </div>\n                                                <div className={classes.paid}>\n                                                    <label>{freeSlot.feeType}</label>\n                                                </div>\n                                            </Paper>\n                                        </Grid>\n                                    })\n                                    }\n                                </Grid>\n                            </div>\n                            }\n                            <div className={classes.root}>\n                                <Grid container spacing={1}>\n                                    {\n\n                                    }\n                                </Grid>\n                            </div>\n\n                        </form>\n                    )}\n                />\n\n            </Styles>\n        </MuiThemeProvider>\n    )\n}\n\nconst ToastApp = () => (\n    <ToastProvider autoDismiss={true}>\n        <App/>\n    </ToastProvider>\n)\n\n\nexport default ToastApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}